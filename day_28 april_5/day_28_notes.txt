Child Processes Module
======================
-Node.js is single-threaded, non-blocking but running a single thread in a CPU cannot handle increasing workload.
-The child_process module can be used to start child processes, and those child processes can easily communicate with each other with a messaging system.
-There are four different ways to create a child process in Node:
	1. exec() 
	2. execFile()
	3. spawn()
	4. fork()
exec() : creates a new shell process and executes a command in that shell.
         The output of the command can be collected via a callback function passed to exec()
		ex: exec("dir", (error, stdout, stderr) =>{});
		error - if command not found
		stdout - output of the executed command
		stderr - if error while executing the command
			
execFile() : execute a file (bat/sh)
			 
spawn(): when the command we want to run can output a large amount of data

fork() : communication channel is established to the child process when using fork, so we 	can use the send function on the forked process along with the global process object itself to exchange messages between the parent and forked processes.